{"version":3,"sources":["Component/Helloworld.js","Component/CounterExample.js","Component/NavigationMenu.js","Component/Navigation.js","Component/Header.js","Component/Footer.js","Component/Loader.js","Component/ProductCard.js","Hooks/HttpRequests.js","Views/Home.js","Views/About.js","Views/Products.js","App.js","serviceWorker.js","index.js"],"names":["Helloworld","CounterExample","NavigationMenu","props","className","to","class","onClick","closemenu","Navigation","useState","showMenu","setMenu","menutransitions","useTransition","from","position","opacity","enter","leave","Masktransitions","transform","icon","faBars","map","item","key","div","style","Header","React","Component","Footer","Loader","ProductCard","products","id","images","name","price","description","useAxiosGet","url","loading","data","error","requests","setRequests","useEffect","axios","get","then","response","catch","Home","useParams","content","product","About","Products","src","alt","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.7ff2e048.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Helloworld(props)\r\n{\r\n    return(\r\n\r\n    <div>Hello {props.name}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Helloworld","import React, { useState } from 'react'\r\n\r\n// class CounterExample extends React.Component{\r\n    \r\n//     render(){\r\n//         const [count,setCount]=useState(0);\r\n//         return(\r\n           \r\n//         <div>{count}\r\n//        \r\n//             </div>\r\n//         );\r\n\r\n//     }\r\n\r\n// }\r\n\r\nfunction CounterExample()\r\n{\r\n    const [count,setCount]=useState(0);\r\n           return(\r\n               \r\n           <div>{count}\r\n           <h1 onClick={()=>setCount(count+1)}>Plus</h1>\r\n           <h1 onClick={()=>setCount(count-1)}>Minus</h1>\r\n            </div>\r\n           );\r\n}\r\nexport default CounterExample","import React from 'react'\r\nimport {\r\n    BrowserRouter as Rautor,\r\n    Link\r\n} from 'react-router-dom'\r\n\r\n\r\nfunction NavigationMenu(props)\r\n{\r\n        return(\r\n\r\n            <div>\r\n                <div className=\"font-bold py-3\">\r\n                AppName \r\n                </div>\r\n                <ul>\r\n                           <li>\r\n                               <Link to=\"/\" class=\"text-blue-500 py-3 border-t border-b block\" onClick={props.closemenu}>Home</Link></li>\r\n                           <li>\r\n                           <Link to=\"/about\" class=\"text-blue-500 py-3 border-t border-b block\" onClick={props.closemenu}>About</Link></li>\r\n                       </ul>\r\n            </div>\r\n                        \r\n                    \r\n                       \r\n                      \r\n                       \r\n           \r\n        );\r\n}\r\n\r\nexport default NavigationMenu","import React, { useState } from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport {useSpring, animated, useTransition} from 'react-spring'\r\nimport NavigationMenu from './NavigationMenu'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n    \r\n  }from 'react-router-dom';  \r\n\r\nfunction Navigation()\r\n{\r\n\r\n    const[showMenu,setMenu]=useState(false);\r\n    const menutransitions = useTransition(showMenu, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n        })\r\n\r\n        const Masktransitions = useTransition(showMenu, null, {\r\n            from: { opacity: 0 , transform: 'translate3d(0,-40px,0)' },\r\n            enter: { opacity: 1 ,transform: 'translate3d(0,0px,0)' },\r\n            leave: { opacity: 0 ,transform: 'translate3d(0,-40px,0)' },\r\n            })\r\n   \r\n\r\n    return(\r\n        \r\n            <nav>\r\n                <span className=\"text-xl\">\r\n               \r\n                <FontAwesomeIcon icon={faBars} onClick={()=>setMenu(!showMenu)}></FontAwesomeIcon>\r\n               \r\n                </span>\r\n                {\r\n                Masktransitions.map(({ item, key, props }) =>\r\n                   item && <animated.div key={key} style={props}\r\n                   className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\r\n                   onClick={()=>setMenu(false)}>\r\n                       \r\n                   </animated.div>\r\n                   )}\r\n               {\r\n                   menutransitions.map(({ item, key, props }) =>\r\n                   item && <animated.div key={key} style={props}\r\n                   className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow\"\r\n                   onClick={()=>setMenu(false)}>\r\n                      \r\n                      <NavigationMenu closemenu={()=>setMenu(false)}></NavigationMenu>\r\n                   </animated.div>\r\n                   )\r\n               }\r\n               \r\n              \r\n\r\n            </nav>\r\n           \r\n    );\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\n\r\nimport Navigation from './Navigation'\r\n\r\nclass Header extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <header class=\"border-p  p-3 flex justify-between\">\r\n                <section class=\"font-bold\">My App</section>\r\n              <Navigation></Navigation>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Header","import React from 'react'\r\n\r\n\r\nfunction Footer(){\r\n\r\n    return(\r\n        <div className=\"bg-gray-700 fixed text-center p-3 absolute inset-x-0 bottom-0 \">\r\n            @Copy Right 2020\r\n        \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nfunction Loader()\r\n{\r\n    return(\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"loader\"></div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Loader","import React from 'react'\r\nimport {\r\n    \r\n    Link\r\n} from 'react-router-dom'\r\n\r\nfunction ProductCard(props)\r\n{\r\n        return(\r\n            <div className=\"border mb-4 rounded overflow-hidden\">\r\n                <Link to={`/products/${props.products.id}`}>\r\n               <div style={{'backgroundImage':`url('${props.products.images}')`}}\r\n               \r\n               className=\"w-full h-64 bg-blue bg-cover\">\r\n\r\n               </div>\r\n              </Link>\r\n              <div className=\"p-3\">              \r\n              <h3 className=\"font-bold text-xl mb-3\">\r\n                <Link to={`/products/${props.products.id}`}>\r\n                    {props.products.name}\r\n                </Link>\r\n                </h3>\r\n              </div>\r\n              <div className=\"font-bold-mb-3\">\r\n                ${props.products.price}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                {props.products.description}\r\n              </div>\r\n              <Link to={`/products/${props.products.id}`}\r\n              className=\"bg-blue-500 text-white p-2 flex justify-center w-full\"\r\n              >View\r\n                   \r\n                </Link>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProductCard","import React,{useState,useEffect}from 'react'\r\nimport axios from 'axios'\r\n\r\nexport function useAxiosGet(url)\r\n{\r\n    const[requests,setRequests]=useState({\r\n        loading:false,\r\n        data:null,\r\n        error:false\r\n    });\r\n    useEffect(()=>{\r\n        setRequests({\r\n            loading:true,\r\n            data:null,\r\n            error:false\r\n        });\r\n        axios.get(url).then(response=>{\r\n            setRequests({\r\n                loading:false,\r\n                data:response.data,\r\n                error:false,\r\n            })\r\n            \r\n        }).catch(()=>{\r\n            setRequests({\r\n                loading:false,\r\n                data:null,\r\n                error:true,\r\n            })\r\n        })\r\n    },url)\r\n\r\n    return requests\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport Loader from '../Component/Loader'\r\nimport ProductCard from '../Component/ProductCard';\r\nimport { useAxiosGet } from '../Hooks/HttpRequests';\r\nfunction Home()\r\n{\r\n    const {id}=useParams();\r\n    const url=\"https://5f6f7281adc24200166e10eb.mockapi.io/products?page=1&limit=10\"\r\n    let products=useAxiosGet(url);\r\n   \r\n    let content=null;\r\n   \r\n    if(products.error)\r\n    {\r\n        content=<p>There was an error please refresh or try again </p>\r\n    }\r\n    if(products.loading)\r\n    {\r\n        content=<Loader></Loader>\r\n    }\r\n    if(products.data)\r\n    {\r\n     content=products.data.map((product)=>\r\n     <div key={product.id}>\r\n         {\r\n             <ProductCard products={product}/>\r\n            \r\n         }\r\n     </div>\r\n     )\r\n    }\r\n    return(\r\n        <div>\r\n          <h1 className=\"font-bold text-2xl mb-3\">Best Sellers</h1>\r\n             \r\n             {content}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\n\r\nfunction About()\r\n{\r\n    return(\r\n        <div>\r\n            <h1 className=\"font-bold text-2xl mb-3\">About</h1>\r\n            <p>  This is about</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from '../Component/Loader'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests';\r\nfunction Products()\r\n{\r\n    const {id}=useParams();\r\n    const url=`https://5f6f7281adc24200166e10eb.mockapi.io/products/${id}`\r\n    let products=useAxiosGet(url);\r\n    let content=null;\r\n  \r\n    if(products.error)\r\n    {\r\n        content=<p>There was an error please refresh or try again </p>\r\n    }\r\n    if(products.loading)\r\n    {\r\n        content=<Loader></Loader>\r\n    }\r\n   if(products.data)\r\n   {\r\n    content= \r\n    <div>\r\n    <h1 className=\"text-2xl font-bold mb-2\">\r\n        {products.data.name}\r\n    </h1>\r\n    <div>\r\n        <img src={products.data.images} alt={products.data.name}>\r\n        </img>\r\n    </div>\r\n    <div className=\"font-bold text-xl mb-2\">\r\n        ${products.data.price}\r\n    </div>\r\n    <div>\r\n        {products.data.description}\r\n    </div>\r\n</div>\r\n   }\r\n   return(\r\n    <div>\r\n       {content}\r\n    </div>\r\n);\r\n    \r\n}\r\n\r\nexport default Products","import React from 'react';\n\nimport {BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n}from 'react-router-dom';\nimport Helloworld from './Component/Helloworld'\nimport CounterExample from './Component/CounterExample'\nimport Header from './Component/Header'\nimport Footer from './Component/Footer'\nimport Home from './Views/Home'\nimport About from './Views/About'\nimport Products from './Views/Products'\nfunction App() {\n  return (\n   <div className=\"relative pb-10 min-h-screen\">\n     <Router>\n     <Header></Header>\n     <div className=\"p-3\">\n     <Switch>\n       <Route exact path=\"/\">\n      <Home></Home>\n       </Route>\n       <Route path=\"/about\">\n      <About></About>\n       </Route>\n       <Route path=\"/products/:id\">\n      <Products></Products>\n       </Route>\n     </Switch>\n     </div>\n     <Footer></Footer>\n     </Router>\n     \n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './tailwind.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}